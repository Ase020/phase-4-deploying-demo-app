{"version":3,"sources":["styles/Box.js","styles/Button.js","styles/FormField.js","styles/Input.js","styles/Label.js","styles/Textarea.js","styles/Error.js","components/NavBar.js","components/LoginForm.js","components/SignUpForm.js","pages/Login.js","pages/RecipeList.js","pages/NewRecipe.js","components/App.js","index.js"],"names":["Box","styled","div","COLORS","primary","secondary","ButtonBase","button","FillButton","OutlineButton","Button","Component","variant","color","props","style","FormField","Input","input","Label","label","Textarea","textarea","Wrapper","Alert","span","Message","p","Error","children","header","Logo","h1","Nav","nav","NavBar","user","setUser","to","as","Link","onClick","fetch","method","then","r","ok","LoginForm","onLogin","useState","username","setUsername","password","setPassword","errors","setErrors","isLoading","setIsLoading","onSubmit","e","preventDefault","headers","body","JSON","stringify","json","err","htmlFor","type","id","autoComplete","value","onChange","target","map","SignUpForm","passwordConfirmation","setPasswordConfirmation","imageUrl","setImageUrl","bio","setBio","password_confirmation","image_url","rows","section","Divider","hr","Login","showLogin","setShowLogin","Recipe","article","RecipeList","recipes","setRecipes","useEffect","length","recipe","title","minutes_to_complete","instructions","WrapperChild","NewRecipe","setTitle","minutesToComplete","setMinutesToComplete","setInstructions","history","useHistory","push","App","path","GlobalStyle","createGlobalStyle","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5d78b77e.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nconst Box = styled.div`\r\n  border-radius: 6px;\r\n  box-shadow: 0 0.5em 1em -0.125em rgb(10 10 10 / 10%),\r\n    0 0 0 1px rgb(10 10 10 / 2%);\r\n  padding: 16px;\r\n`;\r\n\r\nexport default Box;\r\n","import styled from \"styled-components\";\r\n\r\nconst COLORS = {\r\n  primary: {\r\n    \"--main\": \"indigo\",\r\n    \"--accent\": \"white\",\r\n  },\r\n  secondary: {\r\n    \"--main\": \"lavenderblush\",\r\n    \"--accent\": \"indigo\",\r\n  },\r\n};\r\n\r\nfunction Button({ variant = \"fill\", color = \"primary\", ...props }) {\r\n  let Component;\r\n  if (variant === \"fill\") {\r\n    Component = FillButton;\r\n  } else if (variant === \"outline\") {\r\n    Component = OutlineButton;\r\n  }\r\n\r\n  return <Component style={COLORS[color]} {...props} />;\r\n}\r\n\r\nconst ButtonBase = styled.button`\r\n  cursor: pointer;\r\n  font-size: 1rem;\r\n  border: 1px solid transparent;\r\n  border-radius: 6px;\r\n  padding: 8px 16px;\r\n  text-decoration: none;\r\n`;\r\n\r\nconst FillButton = styled(ButtonBase)`\r\n  background-color: var(--main);\r\n  color: var(--accent);\r\n\r\n  &:hover {\r\n    opacity: 0.9;\r\n  }\r\n`;\r\n\r\nconst OutlineButton = styled(ButtonBase)`\r\n  background-color: white;\r\n  color: var(--main);\r\n  border: 2px solid var(--main);\r\n\r\n  &:hover {\r\n    background: hsl(235deg 85% 97%);\r\n  }\r\n`;\r\n\r\nexport default Button;\r\n","import styled from \"styled-components\";\r\n\r\nconst FormField = styled.div`\r\n  &:not(:last-child) {\r\n    margin-bottom: 12px;\r\n  }\r\n`;\r\n\r\nexport default FormField;\r\n","import styled from \"styled-components\";\r\n\r\nconst Input = styled.input`\r\n  border-radius: 6px;\r\n  border: 1px solid transparent;\r\n  border-color: #dbdbdb;\r\n  -webkit-appearance: none;\r\n  max-width: 100%;\r\n  width: 100%;\r\n  font-size: 1rem;\r\n  line-height: 1.5;\r\n  padding: 4px;\r\n`;\r\n\r\nexport default Input;\r\n","import styled from \"styled-components\";\r\n\r\nconst Label = styled.label`\r\n  color: #363636;\r\n  display: block;\r\n  font-size: 1rem;\r\n  font-weight: 700;\r\n  margin-bottom: 8px;\r\n`;\r\n\r\nexport default Label;\r\n","import styled from \"styled-components\";\r\n\r\nconst Textarea = styled.textarea`\r\n  border-radius: 6px;\r\n  border: 1px solid transparent;\r\n  border-color: #dbdbdb;\r\n  -webkit-appearance: none;\r\n  max-width: 100%;\r\n  width: 100%;\r\n  font-size: 1rem;\r\n  line-height: 1.5;\r\n  padding: 4px;\r\n  resize: none;\r\n`;\r\n\r\nexport default Textarea;\r\n","import styled from \"styled-components\";\r\n\r\nfunction Error({ children }) {\r\n  return (\r\n    <Wrapper>\r\n      <Alert>!</Alert>\r\n      <Message>{children}</Message>\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nconst Wrapper = styled.div`\r\n  color: red;\r\n  background-color: mistyrose;\r\n  border-radius: 6px;\r\n  display: flex;\r\n  padding: 8px;\r\n  align-items: center;\r\n  gap: 8px;\r\n  margin: 8px 0;\r\n`;\r\n\r\nconst Alert = styled.span`\r\n  background-color: white;\r\n  height: 30px;\r\n  width: 30px;\r\n  border-radius: 50%;\r\n  font-weight: bold;\r\n  display: grid;\r\n  place-content: center;\r\n`;\r\n\r\nconst Message = styled.p`\r\n  margin: 0;\r\n`;\r\n\r\nexport default Error;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport { Button } from \"../styles\";\r\n\r\nfunction NavBar({ user, setUser }) {\r\n  function handleLogoutClick() {\r\n    fetch(\"/api/logout\", { method: \"DELETE\" }).then((r) => {\r\n      if (r.ok) {\r\n        setUser(null);\r\n      }\r\n    });\r\n  }\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Logo>\r\n        <Link to=\"/\">Reciplease</Link>\r\n      </Logo>\r\n      <Nav>\r\n        <Button as={Link} to=\"/new\">\r\n          New Recipe\r\n        </Button>\r\n        <Button variant=\"outline\" onClick={handleLogoutClick}>\r\n          Logout\r\n        </Button>\r\n      </Nav>\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nconst Wrapper = styled.header`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  padding: 8px;\r\n`;\r\n\r\nconst Logo = styled.h1`\r\n  font-family: \"Permanent Marker\", cursive;\r\n  font-size: 3rem;\r\n  color: deeppink;\r\n  margin: 0;\r\n  line-height: 1;\r\n\r\n  a {\r\n    color: inherit;\r\n    text-decoration: none;\r\n  }\r\n`;\r\n\r\nconst Nav = styled.nav`\r\n  display: flex;\r\n  gap: 4px;\r\n  position: absolute;\r\n  right: 8px;\r\n`;\r\n\r\nexport default NavBar;\r\n","import React, { useState } from \"react\";\r\nimport { Button, Error, Input, FormField, Label } from \"../styles\";\r\n\r\nfunction LoginForm({ onLogin }) {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [errors, setErrors] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    setIsLoading(true);\r\n    fetch(\"/api/login\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({ username, password }),\r\n    }).then((r) => {\r\n      setIsLoading(false);\r\n      if (r.ok) {\r\n        r.json().then((user) => onLogin(user));\r\n      } else {\r\n        r.json().then((err) => setErrors(err.errors));\r\n      }\r\n    });\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <FormField>\r\n        <Label htmlFor=\"username\">Username</Label>\r\n        <Input\r\n          type=\"text\"\r\n          id=\"username\"\r\n          autoComplete=\"off\"\r\n          value={username}\r\n          onChange={(e) => setUsername(e.target.value)}\r\n        />\r\n      </FormField>\r\n      <FormField>\r\n        <Label htmlFor=\"password\">Password</Label>\r\n        <Input\r\n          type=\"password\"\r\n          id=\"password\"\r\n          autoComplete=\"current-password\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n        />\r\n      </FormField>\r\n      <FormField>\r\n        <Button variant=\"fill\" color=\"primary\" type=\"submit\">\r\n          {isLoading ? \"Loading...\" : \"Login\"}\r\n        </Button>\r\n      </FormField>\r\n      <FormField>\r\n        {errors.map((err) => (\r\n          <Error key={err}>{err}</Error>\r\n        ))}\r\n      </FormField>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default LoginForm;\r\n","import React, { useState } from \"react\";\r\nimport { Button, Error, Input, FormField, Label, Textarea } from \"../styles\";\r\n\r\nfunction SignUpForm({ onLogin }) {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [passwordConfirmation, setPasswordConfirmation] = useState(\"\");\r\n  const [imageUrl, setImageUrl] = useState(\"\");\r\n  const [bio, setBio] = useState(\"\");\r\n  const [errors, setErrors] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    setErrors([]);\r\n    setIsLoading(true);\r\n    fetch(\"/api/signup\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        username,\r\n        password,\r\n        password_confirmation: passwordConfirmation,\r\n        image_url: imageUrl,\r\n        bio,\r\n      })\r\n    }).then((r) => {\r\n      setIsLoading(false);\r\n      if (r.ok) {\r\n        r.json().then((user) => onLogin(user));\r\n      } else {\r\n        r.json().then((err) => setErrors(err.errors));\r\n      }\r\n    });\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <FormField>\r\n        <Label htmlFor=\"username\">Username</Label>\r\n        <Input\r\n          type=\"text\"\r\n          id=\"username\"\r\n          autoComplete=\"off\"\r\n          value={username}\r\n          onChange={(e) => setUsername(e.target.value)}\r\n        />\r\n      </FormField>\r\n      <FormField>\r\n        <Label htmlFor=\"password\">Password</Label>\r\n        <Input\r\n          type=\"password\"\r\n          id=\"password\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n          autoComplete=\"current-password\"\r\n        />\r\n      </FormField>\r\n      <FormField>\r\n        <Label htmlFor=\"password\">Password Confirmation</Label>\r\n        <Input\r\n          type=\"password\"\r\n          id=\"password_confirmation\"\r\n          value={passwordConfirmation}\r\n          onChange={(e) => setPasswordConfirmation(e.target.value)}\r\n          autoComplete=\"current-password\"\r\n        />\r\n      </FormField>\r\n      <FormField>\r\n        <Label htmlFor=\"imageUrl\">Profile Image</Label>\r\n        <Input\r\n          type=\"text\"\r\n          id=\"imageUrl\"\r\n          value={imageUrl}\r\n          onChange={(e) => setImageUrl(e.target.value)}\r\n        />\r\n      </FormField>\r\n      <FormField>\r\n        <Label htmlFor=\"bio\">Bio</Label>\r\n        <Textarea\r\n          rows=\"3\"\r\n          id=\"bio\"\r\n          value={bio}\r\n          onChange={(e) => setBio(e.target.value)}\r\n        />\r\n      </FormField>\r\n      <FormField>\r\n        <Button type=\"submit\">{isLoading ? \"Loading...\" : \"Sign Up\"}</Button>\r\n      </FormField>\r\n      <FormField>\r\n        {errors.map((err) => (\r\n          <Error key={err}>{err}</Error>\r\n        ))}\r\n      </FormField>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default SignUpForm;\r\n","import { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport LoginForm from \"../components/LoginForm\";\r\nimport SignUpForm from \"../components/SignUpForm\";\r\nimport { Button } from \"../styles\";\r\n\r\nfunction Login({ onLogin }) {\r\n  const [showLogin, setShowLogin] = useState(true);\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Logo>Reciplease</Logo>\r\n      {showLogin ? (\r\n        <>\r\n          <LoginForm onLogin={onLogin} />\r\n          <Divider />\r\n          <p>\r\n            Don't have an account? &nbsp;\r\n            <Button color=\"secondary\" onClick={() => setShowLogin(false)}>\r\n              Sign Up\r\n            </Button>\r\n          </p>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <SignUpForm onLogin={onLogin} />\r\n          <Divider />\r\n          <p>\r\n            Already have an account? &nbsp;\r\n            <Button color=\"secondary\" onClick={() => setShowLogin(true)}>\r\n              Log In\r\n            </Button>\r\n          </p>\r\n        </>\r\n      )}\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nconst Logo = styled.h1`\r\n  font-family: \"Permanent Marker\", cursive;\r\n  font-size: 3rem;\r\n  color: deeppink;\r\n  margin: 8px 0 16px;\r\n`;\r\n\r\nconst Wrapper = styled.section`\r\n  max-width: 500px;\r\n  margin: 40px auto;\r\n  padding: 16px;\r\n`;\r\n\r\nconst Divider = styled.hr`\r\n  border: none;\r\n  border-bottom: 1px solid #ccc;\r\n  margin: 16px 0;\r\n`;\r\n\r\nexport default Login;\r\n","import { useEffect, useState } from \"react\";\r\nimport ReactMarkdown from \"react-markdown\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport { Box, Button } from \"../styles\";\r\n\r\nfunction RecipeList() {\r\n  const [recipes, setRecipes] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetch(\"/api/recipes\")\r\n      .then((r) => r.json())\r\n      .then(setRecipes);\r\n  }, []);\r\n\r\n  return (\r\n    <Wrapper>\r\n      {recipes.length > 0 ? (\r\n        recipes.map((recipe) => (\r\n          <Recipe key={recipe.id}>\r\n            <Box>\r\n              <h2>{recipe.title}</h2>\r\n              <p>\r\n                <em>Time to Complete: {recipe.minutes_to_complete} minutes</em>\r\n                &nbsp;·&nbsp;\r\n                <cite>By {recipe.user.username}</cite>\r\n              </p>\r\n              <ReactMarkdown>{recipe.instructions}</ReactMarkdown>\r\n            </Box>\r\n          </Recipe>\r\n        ))\r\n      ) : (\r\n        <>\r\n          <h2>No Recipes Found</h2>\r\n          <Button as={Link} to=\"/new\">\r\n            Make a New Recipe\r\n          </Button>\r\n        </>\r\n      )}\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nconst Wrapper = styled.section`\r\n  max-width: 800px;\r\n  margin: 40px auto;\r\n`;\r\n\r\nconst Recipe = styled.article`\r\n  margin-bottom: 24px;\r\n`;\r\n\r\nexport default RecipeList;\r\n","import { useState } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport styled from \"styled-components\";\r\nimport ReactMarkdown from \"react-markdown\";\r\nimport { Button, Error, FormField, Input, Label, Textarea } from \"../styles\";\r\n\r\nfunction NewRecipe({ user }) {\r\n  const [title, setTitle] = useState(\"My Awesome Recipe\");\r\n  const [minutesToComplete, setMinutesToComplete] = useState(\"30\");\r\n  const [instructions, setInstructions] = useState(`Here's how you make it.\r\n  \r\n## Ingredients\r\n\r\n- 1c Sugar\r\n- 1c Spice\r\n\r\n## Instructions\r\n\r\n**Mix** sugar and spice. _Bake_ for 30 minutes.\r\n  `);\r\n  const [errors, setErrors] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const history = useHistory();\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    setIsLoading(true);\r\n    fetch(\"/api/recipes\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        title,\r\n        instructions,\r\n        minutes_to_complete: minutesToComplete,\r\n      }),\r\n    }).then((r) => {\r\n      setIsLoading(false);\r\n      if (r.ok) {\r\n        history.push(\"/\");\r\n      } else {\r\n        r.json().then((err) => setErrors(err.errors));\r\n      }\r\n    });\r\n  }\r\n\r\n  return (\r\n    <Wrapper>\r\n      <WrapperChild>\r\n        <h2>Create Recipe</h2>\r\n        <form onSubmit={handleSubmit}>\r\n          <FormField>\r\n            <Label htmlFor=\"title\">Title</Label>\r\n            <Input\r\n              type=\"text\"\r\n              id=\"title\"\r\n              value={title}\r\n              onChange={(e) => setTitle(e.target.value)}\r\n            />\r\n          </FormField>\r\n          <FormField>\r\n            <Label htmlFor=\"minutesToComplete\">Minutes to complete</Label>\r\n            <Input\r\n              type=\"number\"\r\n              id=\"minutesToComplete\"\r\n              value={minutesToComplete}\r\n              onChange={(e) => setMinutesToComplete(e.target.value)}\r\n            />\r\n          </FormField>\r\n          <FormField>\r\n            <Label htmlFor=\"instructions\">Instructions</Label>\r\n            <Textarea\r\n              id=\"instructions\"\r\n              rows=\"10\"\r\n              value={instructions}\r\n              onChange={(e) => setInstructions(e.target.value)}\r\n            />\r\n          </FormField>\r\n          <FormField>\r\n            <Button color=\"primary\" type=\"submit\">\r\n              {isLoading ? \"Loading...\" : \"Submit Recipe\"}\r\n            </Button>\r\n          </FormField>\r\n          <FormField>\r\n            {errors.map((err) => (\r\n              <Error key={err}>{err}</Error>\r\n            ))}\r\n          </FormField>\r\n        </form>\r\n      </WrapperChild>\r\n      <WrapperChild>\r\n        <h1>{title}</h1>\r\n        <p>\r\n          <em>Time to Complete: {minutesToComplete} minutes</em>\r\n          &nbsp;·&nbsp;\r\n          <cite>By {user.username}</cite>\r\n        </p>\r\n        <ReactMarkdown>{instructions}</ReactMarkdown>\r\n      </WrapperChild>\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nconst Wrapper = styled.section`\r\n  max-width: 1000px;\r\n  margin: 40px auto;\r\n  padding: 16px;\r\n  display: flex;\r\n  gap: 24px;\r\n`;\r\n\r\nconst WrapperChild = styled.div`\r\n  flex: 1;\r\n`;\r\n\r\nexport default NewRecipe;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport NavBar from \"./NavBar\";\r\nimport Login from \"../pages/Login\";\r\nimport RecipeList from \"../pages/RecipeList\";\r\nimport NewRecipe from \"../pages/NewRecipe\";\r\n\r\nfunction App() {\r\n  const [user, setUser] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // auto-login\r\n    fetch(\"/api/me\").then((r) => {\r\n      if (r.ok) {\r\n        r.json().then((user) => setUser(user));\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  if (!user) return <Login onLogin={setUser} />;\r\n\r\n  return (\r\n    <>\r\n      <NavBar user={user} setUser={setUser} />\r\n      <main>\r\n        <Switch>\r\n          <Route path=\"/new\">\r\n            <NewRecipe user={user} />\r\n          </Route>\r\n          <Route path=\"/\">\r\n            <RecipeList />\r\n          </Route>\r\n        </Switch>\r\n      </main>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./components/App\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport { createGlobalStyle } from \"styled-components\";\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  *,\r\n  *::before, \r\n  *::after {\r\n    box-sizing: border-box;\r\n  }\r\n\r\n  html, body {\r\n    margin: 0;\r\n  }\r\n\r\n  body {\r\n    font-family: BlinkMacSystemFont,-apple-system,\"Segoe UI\",Roboto,Oxygen,Ubuntu,Cantarell,\"Fira Sans\",\"Droid Sans\",\"Helvetica Neue\",Helvetica,Arial,sans-serif;\r\n  }\r\n`;\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <GlobalStyle />\r\n    <App />\r\n  </BrowserRouter>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}